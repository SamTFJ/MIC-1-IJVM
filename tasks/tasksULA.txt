Construa a ULA com os sinais de controle indicados (F0, F1, ENA, ENB, INVA, INC) e implemente a lógica para a operação aritmética (como soma e operações XOR, conforme os exemplos).

Microetapas:

// 1. Habilitar as entradas
A_eff = (ENA == 1) ? A : 0;
B_eff = (ENB == 1) ? B : 0;

// 2. Aplicar a inversão se necessário
if (INVA == 1)
    A_eff = NOT A_eff;

// 3. Definir o Carry-In a partir de INC
CarryIn = INC;

// 4. Seleção da operação com base em F0 e F1
switch (F1, F0) {
    case (0, 0):
        // Operação de soma: utilizar um somador completo para cada bit
        // Para um bit, a soma e o carry-out podem ser definidos como:
        // S = A_eff XOR B_eff XOR CarryIn
        // CarryOut = (A_eff AND B_eff) OR (CarryIn AND (A_eff XOR B_eff))
        (S, CarryOut) = FullAdder(A_eff, B_eff, CarryIn);
        break;
    case (0, 1):
        // Operação XOR simples: sem carry
        S = A_eff XOR B_eff;
        CarryOut = 0; // ou pode ser definido de outra forma, conforme o projeto
        break;
    // Você pode definir outras operações para os demais valores de (F1, F0)
    default:
        // Operação padrão (por exemplo, só repassar um dos operandos ou zero)
        S = 0;
        CarryOut = 0;
}
